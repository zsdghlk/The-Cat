name: Post Cat to X (Every 20 min)

on:
  schedule:
    - cron: "*/20 * * * *"  # 20分ごと（毎時 00,20,40）
  workflow_dispatch:
    inputs:
      dry_run:
        description: "Dry run (no tweet)"
        required: true
        default: "true"
        type: choice
        options: ["true", "false"]

# 既定は読み取りのみ（ジョブ内で必要箇所だけ write を付与）
permissions:
  contents: read

concurrency:
  group: post-cat
  cancel-in-progress: true

jobs:
  post-cat:
    # stateファイルのコミットに必要な範囲のみ許可
    permissions:
      contents: write

    runs-on: ubuntu-latest
    timeout-minutes: 10

    steps:
      # actions を SHA ピン留め
      - uses: actions/checkout@08eba0b27e820071cde6df949e0beb9ba4906955
      - uses: actions/setup-node@49933ea5288caeca8642d1e84afbd3f7d6820020
        with:
          node-version: 20

      - run: npm ci || npm i

      # 軽いジッタで発火時間を分散（0〜59秒）
      - name: Jitter
        run: sleep $((RANDOM % 60))

      # Secretsが揃っているか検査（未設定ならここで失敗）
      - name: Preflight (check secrets)
        run: |
          node -e "['CAT_API_KEY','TWITTER_APP_KEY','TWITTER_APP_SECRET','TWITTER_ACCESS_TOKEN','TWITTER_ACCESS_SECRET'].forEach(k=>{if(!process.env[k]){throw new Error('Missing '+k)}})"
        env:
          CAT_API_KEY: ${{ secrets.CAT_API_KEY }}
          TWITTER_APP_KEY: ${{ secrets.TWITTER_APP_KEY }}
          TWITTER_APP_SECRET: ${{ secrets.TWITTER_APP_SECRET }}
          TWITTER_ACCESS_TOKEN: ${{ secrets.TWITTER_ACCESS_TOKEN }}
          TWITTER_ACCESS_SECRET: ${{ secrets.TWITTER_ACCESS_SECRET }}

      - name: Run poster
        run: node post-cat.js
        env:
          CAT_API_KEY: ${{ secrets.CAT_API_KEY }}
          TWITTER_APP_KEY: ${{ secrets.TWITTER_APP_KEY }}
          TWITTER_APP_SECRET: ${{ secrets.TWITTER_APP_SECRET }}
          TWITTER_ACCESS_TOKEN: ${{ secrets.TWITTER_ACCESS_TOKEN }}
          TWITTER_ACCESS_SECRET: ${{ secrets.TWITTER_ACCESS_SECRET }}
          # dispatchのときは入力、それ以外（schedule）はfalse
          DRY_RUN: ${{ github.event_name == 'workflow_dispatch' && inputs.dry_run || 'false' }}
          # 必要なら短縮タグを無効化: CAPTION_TAGS: ""
          # CAPTION_TAGS: "#TheCatAPI"

      # キャプション履歴ファイルがあればコミット（無ければスキップ）
      - name: Commit caption state
        if: ${{ success() }}
        run: |
          if [ -f .state/used_captions.json ]; then
            git config user.name  "github-actions[bot]"
            git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
            git add .state/used_captions.json
            git commit -m "chore: update caption history [skip ci]" || echo "no changes"
            git push
          else
            echo "No caption state file found; skipping commit."
          fi
